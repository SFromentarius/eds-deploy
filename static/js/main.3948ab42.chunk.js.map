{"version":3,"sources":["components/Accueil.tsx","components/VirtualizedTable.js","helpers/BoxLine.js","helpers/Editable.js","helpers/Keys.js","components/DataGrid.js","components/VariableGrid.tsx","components/TableDrawer.js","helpers/SearchInput.js","diagram/WorkspaceWidget.tsx","diagram/StyledCanvasWidget.tsx","diagram/ZoomActions.js","helpers/CircularIndeterminate.js","diagram/ArrowLink.tsx","diagram/CustomNode.tsx","diagram/Diagram.js","components/Table.tsx","components/Tables.tsx","components/Variables.tsx","components/Visualisation.tsx","App.tsx","serviceWorker.js","index.js"],"names":["data","titre","description","lien","Accueil","props","useEffect","updateHash","path","className","map","e","i","key","href","target","rel","TextHightlighter","displayText","this","highlight","text","variant","style","split","RegExp","part","toLowerCase","join","Typography","display","dangerouslySetInnerHTML","__html","React","PureComponent","MuiVirtualizedTable","getRowClassName","index","classes","onRowClick","clsx","tableRow","flexContainer","tableRowHover","cellRenderer","cellData","columnIndex","columns","rowHeight","searchText","TableCell","component","tableCell","noClick","height","align","numeric","headerRenderer","label","headerHeight","onClick","handleSort","TableSortLabel","active","columnToSort","id","direction","sortDirection","tableProps","width","gridStyle","table","rowClassName","dataKey","other","headerProps","VirtualizedTable","withStyles","theme","alignItems","boxSizing","flip","paddingRight","undefined","backgroundColor","cursor","flex","textOverflow","whiteSpace","overflow","color","BoxLine","items","Box","m","p","bgcolor","Editable","children","type","placeholder","childRef","save","cancel","useState","isEditing","setEditing","isTextarea","current","focus","length","onKeyDown","event","keys","allKeys","indexOf","handleKeyDown","Button","border","PrimaryKey","src","alt","title","ForeignKey","value","contentEditable","trim","updateText","setState","onChange","evt","createRef","state","editable","ref","rows","AttributeTable","attributeCols","canEdit","tableId","selectByTableId","tableLinkStyle","TableContainer","Paper","aria-label","TableHead","TableRow","col","name","verticalAlign","fontWeight","displayName","TableBody","tableColumn","is_pk","is_fk","parents","table_target_id","table_target","column_target","table_source_id","table_source","column_source","StyledCardData","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","tableHeaders","expandedColumns","visibleColumns","displayHeader","expanded","setExpanded","columns_count","typ_table","count_table","push","last_analyze","last_commit_timestampz","Card","CardContent","filter","startsWith","updateColumns","updateTables","CardActions","disableSpacing","IconButton","aria-expanded","Collapse","in","timeout","unmountOnExit","DataGrid","tables","visibleTables","is_mandatory","comment_technique","comment_fonctionnel","nomTable","d","VariableGrid","useStyles","makeStyles","root","appBar","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","marginRight","flexGrow","hide","drawer","flexShrink","drawerPaper","drawerHeader","padding","spacing","mixins","toolbar","justifyContent","content","contentShift","TableDrawer","selectedTable","onCloseTable","useTheme","Drawer","anchor","open","isEmpty","paper","Divider","search","position","borderRadius","shape","fade","palette","common","white","breakpoints","up","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","SearchInput","updateSearchText","InputBase","input","inputProps","Toolbar","styled","div","Content","Container","StyledButton","button","WorkspaceWidget","buttons","background","StyledCanvasWidget","ZOOM_LEVELS","ZoomAction","InputType","MOUSE_WHEEL","fire","preventDefault","stopPropagation","model","engine","getModel","getLayers","forEach","layer","allowRepaint","nextZoomLevelIndex","zoomDirection","Math","sign","deltaY","previousZoomDiff","currentZoomLevelIndex","zoomLevel","currentZoomDiff","abs","getZoomLevel","min","max","oldZoomFactor","setZoomLevel","zoomFactor","currentTarget","boundingRect","getBoundingClientRect","clientWidth","clientHeight","widthDiff","heightDiff","clientX","left","clientY","top","xFactor","getOffsetX","yFactor","getOffsetY","setOffset","repaintCanvas","Action","CircularIndeterminate","size","flexDirection","CircularProgress","AdvancedLinkModel","bothDirection","dir","DefaultLinkModel","AdvancedPortModel","isIn","_isPk","_isFk","b","DefaultPortModel","CustomLinkArrowWidget","point","previousPoint","angle","atan2","getPosition","y","x","PI","points","fill","data-id","getID","data-linkid","getLink","AdvancedLinkWidget","colorSelected","link","getOptions","selectedColor","getPoints","paths","refPaths","j","generateLink","LinkWidget","generateLinePath","onMouseDown","addPointToLink","getBothDirection","generateArrow","generatePoint","getTargetPort","data-default-link-test","testName","DefaultLinkWidget","AdvancedLinkFactory","diagramEngine","DefaultLinkFactory","CustomNodeFactory","node","DefaultNodeModel","DefaultNodeFactory","PortLabel","Label","Port","KeyPortLabel","keyLabel","port","isPk","isFk","Node","selected","Title","TitleName","Ports","PortsContainer","CustomNodeWidget","generatePort","data-default-node-name","isSelected","getInPorts","getOutPorts","DefaultNodeWidget","EngineWidget","autoDistribute","redistribute","reroute","getLinkFactories","getFactory","PathFindingLinkFactory","NAME","calculateRoutingMatrix","zoomToFit","zoomToFitNodes","zoomIn","getActionEventBus","fireAction","zoomOut","DagreEngine","graph","rankdir","ranker","marginx","marginy","includeLinks","setTimeout","Diagram","nodesIndex","showColumns","isLoading","nextProps","nextState","Object","DiagramModel","ports","_node","registerListener","selectionChanged","onSelected","options","portName","inside","setPk","setFk","setLocked","addPort","addNode","srcPort","targetPort","addLink","createEngine","registerDefaultDeleteItemsAction","registerDefaultZoomCanvasAction","registerFactory","getNodeFactories","setMaxNumberPointsPerLink","registerAction","setModel","invertDirection","ASC","DESC","selectNode","setSelected","values","getLinks","Table","rowData","visibleSelectedTableObj","applySearchFilter","visibleAttributeCols","visibleTablesObj","visibleColumnsCount","visibleColumnsAll","tableHeadersHasText","c","t","includes","toString","onSelectedDiagramTable","entity","find","window","omopData","tableStandardOMOP","error","filterLower","colName","hasSearchText","orderBy","Fragment","rowCount","rowGetter","Component","defaultProps","Tables","Variables","componentDidMount","Visualisation","App","hash","location","pathToUpdate","exact","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.3948ab42.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { PageInterface } from \"../App\";\r\n\r\nconst data = [\r\n  { titre: \"L'entrepôt des données de santé\", description: \"Blablabla\", lien: \"eds.aphp.fr\" },\r\n  {\r\n    titre: \"Le format OMOP\",\r\n    description: \"Blablabla. Explique qu'il y a des variations/adaptations par rapport au standard.\",\r\n    lien: \"OHDSI\",\r\n  },\r\n  {\r\n    titre: \"L'explorateur de données\",\r\n    description: \"Blablabla, décrit le rôle de ce site.\",\r\n    lien: \"lien vers le site de la documentation collaborative\",\r\n  },\r\n];\r\n\r\nexport default function Accueil(props: PageInterface) {\r\n  useEffect(() => {\r\n    props.updateHash(props.path);\r\n  });\r\n  return (\r\n    <div className=\"accueil\">\r\n      {data.map((e, i) => {\r\n        return (\r\n          <div key={i}>\r\n            <h2>{e.titre}</h2>\r\n            <div>{e.description}</div>\r\n            <a href={e.lien} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {e.lien}\r\n            </a>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { AutoSizer, Column, Table } from \"react-virtualized\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nclass TextHightlighter extends React.PureComponent {\r\n  render() {\r\n    const { highlight, text, variant, style } = this.props;\r\n\r\n    let displayText;\r\n    if (!highlight || highlight === \"\" || typeof text !== \"string\") {\r\n      displayText = text;\r\n    } else {\r\n      const parts = text.split(new RegExp(`(${highlight})`, \"gi\"));\r\n      displayText = parts\r\n        .map((part, i) => {\r\n          if (part.toLowerCase() === highlight.toLowerCase()) {\r\n            return `<span style=\"background-color: orange\">${part}</span>`;\r\n          }\r\n          return part;\r\n        })\r\n        .join(\"\");\r\n    }\r\n\r\n    return (\r\n      <Typography\r\n        variant={variant ? variant : \"body2\"}\r\n        style={style}\r\n        display=\"inline\"\r\n        dangerouslySetInnerHTML={{ __html: displayText }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = (theme) => ({\r\n  flexContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    boxSizing: \"border-box\",\r\n  },\r\n  table: {\r\n    // temporary right-to-left patch, waiting for\r\n    // https://github.com/bvaughn/react-virtualized/issues/454\r\n    \"& .ReactVirtualized__Table__headerRow\": {\r\n      flip: false,\r\n      paddingRight: theme.direction === \"rtl\" ? \"0 !important\" : undefined,\r\n      backgroundColor: \"#d2e2f4\",\r\n      \"&:hover\": {\r\n        backgroundColor: \"#d2e2f4\",\r\n      },\r\n    },\r\n  },\r\n  tableRow: {\r\n    cursor: \"pointer\",\r\n    \"&:nth-child(even)\": {\r\n      backgroundColor: \"#fafaf9\",\r\n    },\r\n    \"&:hover\": {\r\n      backgroundColor: \"#d2e2f4\",\r\n    },\r\n  },\r\n  tableRowHover: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"#e6f1fe\",\r\n    },\r\n  },\r\n  tableCell: {\r\n    flex: 1,\r\n    textOverflow: \"ellipsis\",\r\n    whiteSpace: \"nowrap\",\r\n    overflow: \"hidden\",\r\n    display: \"table-cell\",\r\n    color: \"#1665b2\",\r\n  },\r\n  noClick: {\r\n    cursor: \"initial\",\r\n  },\r\n});\r\nclass MuiVirtualizedTable extends React.PureComponent {\r\n  getRowClassName = ({ index }) => {\r\n    const { classes, onRowClick } = this.props;\r\n    return clsx(classes.tableRow, classes.flexContainer, {\r\n      [classes.tableRowHover]: index !== -1 && onRowClick != null,\r\n    });\r\n  };\r\n\r\n  cellRenderer = ({ cellData, columnIndex }) => {\r\n    const { columns, classes, rowHeight, onRowClick, searchText } = this.props;\r\n    return (\r\n      <TableCell\r\n        component=\"div\"\r\n        className={clsx(classes.tableCell, classes.flexContainer, {\r\n          [classes.noClick]: onRowClick == null,\r\n        })}\r\n        variant=\"body\"\r\n        style={{ height: rowHeight }}\r\n        align={(columnIndex != null && columns[columnIndex].numeric) || false ? \"right\" : \"left\"}\r\n      >\r\n        <TextHightlighter text={cellData} variant={\"body2\"} highlight={searchText} />\r\n      </TableCell>\r\n    );\r\n  };\r\n\r\n  headerRenderer = ({ label, columnIndex }) => {\r\n    const { headerHeight, columns, classes } = this.props;\r\n    return (\r\n      <TableCell\r\n        onClick={() => this.props.handleSort(columns[columnIndex])}\r\n        component=\"div\"\r\n        className={clsx(classes.tableCell, classes.flexContainer, classes.noClick)}\r\n        variant=\"head\"\r\n        style={{ height: headerHeight }}\r\n        align={columns[columnIndex].numeric || false ? \"right\" : \"left\"}\r\n      >\r\n        <TableSortLabel\r\n          active={this.props.columnToSort === columns[columnIndex].id}\r\n          direction={\r\n            this.props.columnToSort === columns[columnIndex].id ? this.props.sortDirection.toLowerCase() : \"asc\"\r\n          }\r\n        >\r\n          {label}\r\n        </TableSortLabel>\r\n      </TableCell>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { classes, columns, rowHeight, headerHeight, ...tableProps } = this.props;\r\n    return (\r\n      <AutoSizer>\r\n        {({ height, width }) => (\r\n          <Table\r\n            height={height}\r\n            width={width}\r\n            rowHeight={rowHeight}\r\n            gridStyle={{\r\n              direction: \"inherit\",\r\n            }}\r\n            headerHeight={headerHeight}\r\n            className={classes.table}\r\n            {...tableProps}\r\n            rowClassName={this.getRowClassName}\r\n            onRowClick={(data) => this.props.onRowClick(data)}\r\n          >\r\n            {columns.map(({ dataKey, ...other }, index) => {\r\n              return (\r\n                <Column\r\n                  key={dataKey}\r\n                  headerRenderer={(headerProps) =>\r\n                    this.headerRenderer({\r\n                      ...headerProps,\r\n                      columnIndex: index,\r\n                    })\r\n                  }\r\n                  className={classes.flexContainer}\r\n                  cellRenderer={this.cellRenderer}\r\n                  dataKey={dataKey}\r\n                  {...other}\r\n                />\r\n              );\r\n            })}\r\n          </Table>\r\n        )}\r\n      </AutoSizer>\r\n    );\r\n  }\r\n}\r\n\r\nconst VirtualizedTable = withStyles(styles)(MuiVirtualizedTable);\r\nexport default VirtualizedTable;\r\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction BoxLine(props) {\n  const { items } = props;\n  return (\n    <Box display=\"flex\" style={{ width: \"100%\" }}>\n      {items.map((i) => {\n        return (\n          <Box m=\"auto\" key={\"box-\" + i} p={2}>\n            <Typography variant={i.variant || \"body1\"} bgcolor=\"background.paper\">\n              {i.text || i}\n            </Typography>\n          </Box>\n        );\n      })}\n    </Box>\n  );\n}\n\nexport default BoxLine;\n","// See source origin: https://blog.logrocket.com/the-complete-guide-to-building-inline-editable-ui-in-react/\nimport React, { useState, useEffect } from \"react\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\n\nconst Editable = ({\n  text,\n  type,\n  placeholder,\n  children,\n  childRef,\n  save,\n  cancel,\n  ...props\n}) => {\n  const [isEditing, setEditing] = useState(false);\n  const isTextarea = children.type === 'textarea';\n\n  /*\n    using use effect, when isEditing state is changing, check whether it is set to true, if true, then focus on the reference element\n  */\n  useEffect(() => {\n    if (childRef && childRef.current && isEditing === true) {\n      childRef.current.focus();\n    }\n  }, [isEditing, childRef]);\n\n  const handleKeyDown = (event, type) => {\n    const { key } = event;\n    const keys = [\"Escape\", \"Tab\"];\n    const enterKey = \"Enter\";\n    const allKeys = [...keys, enterKey]; // All keys array\n    /*\n      - For textarea, check only Escape and Tab key and set the state to false\n      - For everything else, all three keys will set the state to false\n    */\n    if ((isTextarea && keys.indexOf(key) > -1) ||(!isTextarea && allKeys.indexOf(key) > -1)) {\n      setEditing(false);\n    }\n  };\n\n  const saveContent = () => {\n    setEditing(false);\n    save();\n  }\n\n  const cancelEdit = () => {\n    setEditing(false);\n    cancel();\n  }\n\n  // display an space if no string, so that it can be clickable\n  const displayText = text == null || text.length === 0 ? '&nbsp;' : text;\n\n  return (\n    <section {...props}>\n      {isEditing ? (\n        <div>\n          <div onKeyDown={e => handleKeyDown(e, type)}>{children}</div>\n          <Box display=\"flex\" style={{ width: '100%' }}>\n            <Box m=\"auto\" p={1}><Button variant=\"contained\" onClick={cancelEdit}>Cancel</Button></Box>\n            <Box m=\"auto\" p={1}><Button variant=\"contained\" color=\"primary\" onClick={saveContent}>Save</Button></Box>\n          </Box>\n        </div>\n      ) : (\n        <div onClick={() => setEditing(true)} style={{cursor: 'pointer', border: '2px solid lightblue'}}>\n          <EditIcon onClick={() => setEditing(true)} style={{cursor:'pointer', color: 'rgb(0, 99, 175)'}}/>\n          <span dangerouslySetInnerHTML={{ __html: displayText}}>\n          </span>\n        </div>\n      )}\n    </section>\n  );\n};\n\n\nexport default Editable;","import * as React from \"react\";\n\nexport function PrimaryKey({ width }) {\n  return <img src=\"eds-deploy/images/primaryKey.png\" alt=\"Primary Key\" title=\"Primary Key\" width={width} />;\n}\n\nexport function ForeignKey({ width }) {\n  return <img src=\"eds-deploy/images/foreignKey.png\" alt=\"Foreign Key\" title=\"Foreign Key\" width={width} />;\n}\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Editable from \"../helpers/Editable.js\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Box from \"@material-ui/core/Box\";\nimport BoxLine from \"../helpers/BoxLine.js\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport clsx from \"clsx\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { PrimaryKey, ForeignKey } from \"../helpers/Keys.js\";\n\nclass TextHightlighter extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.contentEditable = React.createRef();\n    this.state = {\n      text: props.text || \"\",\n    };\n  }\n\n  save = () => {\n    const value = this.contentEditable.current.value;\n    // This is still empty text\n    if (this.props.text === null && value.trim().length === 0) {\n      return;\n    }\n    if (value !== this.props.text) {\n      this.props.updateText(value);\n      this.setState({ text: value });\n    }\n  };\n\n  cancel = () => {\n    this.setState({ text: this.props.text || \"\" });\n  };\n\n  onChange = (evt) => {\n    this.setState({ text: evt.target.value });\n  };\n\n  render() {\n    const { highlight, editable, text } = this.props;\n\n    let displayText;\n    if (!highlight || highlight === \"\" || typeof text !== \"string\") {\n      displayText = text;\n    } else {\n      const parts = text.split(new RegExp(`(${highlight})`, \"gi\"));\n      displayText = parts\n        .map((part, i) => {\n          if (part.toLowerCase() === highlight.toLowerCase()) {\n            return `<span style=\"background-color: orange\">${part}</span>`;\n          }\n          return part;\n        })\n        .join(\"\");\n    }\n\n    if (!editable || !this.props.updateText) {\n      return (\n        <Typography\n          variant=\"body2\"\n          display=\"inline\"\n          dangerouslySetInnerHTML={{ __html: displayText }}\n          style={{ color: \"#1665b2\" }}\n        />\n      );\n    }\n\n    return (\n      <Editable text={displayText} childRef={this.contentEditable} type=\"input\" save={this.save} cancel={this.cancel}>\n        <textarea\n          ref={this.contentEditable}\n          type=\"text\"\n          rows=\"5\"\n          style={{ width: \"100%\", color: \"#1665b2\" }}\n          value={this.state.text}\n          onChange={this.onChange}\n        />\n      </Editable>\n    );\n  }\n}\n\nfunction AttributeTable(props) {\n  const { columns, attributeCols, searchText, canEdit, tableId, selectByTableId } = props;\n  if (columns.length === 0) {\n    return null;\n  }\n\n  const tableLinkStyle = { cursor: \"pointer\", color: \"#3c8dbc\" };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"table\">\n        <TableHead>\n          <TableRow>\n            <TableCell style={{ backgroundColor: \"#D2E2F4\" }}></TableCell> {/* For FK / PK */}\n            {attributeCols.map((col) => (\n              <TableCell\n                key={\"table-head-\" + tableId + \"-\" + col.name}\n                style={{ verticalAlign: \"top\", color: \"#1665b2\", backgroundColor: \"#D2E2F4\", fontWeight: \"bold\" }}\n              >\n                {col.displayName}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {columns.map((tableColumn) => (\n            <TableRow key={\"table-row-\" + tableId + \"-\" + tableColumn.id}>\n              <TableCell style={{ verticalAlign: \"top\" }}>\n                {tableColumn.is_pk && <PrimaryKey width=\"20\" />}\n                {!tableColumn.is_pk && tableColumn.is_fk && <ForeignKey width=\"20\" />}\n                {!tableColumn.is_pk && !tableColumn.is_fk && null}\n              </TableCell>\n              {attributeCols.map((col) => (\n                <TableCell\n                  key={\"table-cell-\" + tableColumn.id + \"-\" + col.name}\n                  style={{ verticalAlign: \"top\", color: \"#1665b2\" }}\n                >\n                  {col.name === \"parents\" &&\n                    tableColumn.parents.map((e) => (\n                      <div key={\"table-\" + tableColumn.id + \"-\" + e.name + \"-parent-\" + e.id}>\n                        <b onClick={() => selectByTableId(e.table_target_id)} style={tableLinkStyle}>\n                          {e.table_target}\n                        </b>\n                        {\".\" + e.column_target}\n                      </div>\n                    ))}\n                  {col.name === \"children\" &&\n                    tableColumn.children.map((e) => (\n                      <div key={\"table-\" + tableColumn.id + \"-\" + e.name + \"-children-\" + e.id}>\n                        <b onClick={() => selectByTableId(e.table_source_id)} style={tableLinkStyle}>\n                          {e.table_source}\n                        </b>\n                        {\".\" + e.column_source}\n                      </div>\n                    ))}\n                  {col.name !== \"parents\" && col.name !== \"children\" && (\n                    <TextHightlighter\n                      key={\"text-\" + tableColumn.id + \"-\" + col.name + \"-\" + tableColumn[col.name]}\n                      text={tableColumn[col.name]}\n                      highlight={searchText}\n                      updateText={props.updateText ? (text) => props.updateText(tableColumn, col.name, text) : null}\n                      editable={col.editable && canEdit}\n                    />\n                  )}\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nfunction CardData(props) {\n  const {\n    table,\n    canEdit,\n    tableHeaders,\n    attributeCols,\n    searchText,\n    classes,\n    expandedColumns,\n    visibleColumns,\n    displayHeader,\n  } = props;\n  const [expanded, setExpanded] = React.useState(expandedColumns || false);\n\n  const items = [\n    { value: table.columns_count, name: \"Columns\" },\n    { value: table.typ_table, name: \"Type\" },\n    { value: table.parents.length, name: \"Parents\" },\n    { value: table.children.length, name: \"Children\" },\n  ];\n\n  if (table.count_table != null) {\n    items.push({ name: \"Lines\", value: table.count_table });\n  }\n\n  if (table.last_analyze) {\n    items.push({ name: \"Last analysis\", value: table.last_analyze });\n  }\n\n  if (table.last_commit_timestampz) {\n    items.push({ name: \"Last inserted data\", value: table.last_commit_timestampz });\n  }\n\n  return (\n    <Box p={1}>\n      <Card>\n        <CardContent>\n          {displayHeader && <BoxLine items={[{ text: table.name, variant: \"h4\" }]} />}\n          <TableContainer component={Paper}>\n            <Table aria-label=\"table\">\n              <TableHead>\n                <TableRow>\n                  {items.map((col, i) => (\n                    <TableCell\n                      key={\"table-head-\" + table.id + \"-head-\" + i}\n                      style={{ verticalAlign: \"top\", backgroundColor: \"#D2E2F4\", color: \"#1665b2\", fontWeight: \"bold\" }}\n                    >\n                      {col.name}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  {items.map((col, i) => (\n                    <TableCell\n                      key={\"table-head-\" + table.id + \"-val-\" + i}\n                      style={{ verticalAlign: \"top\", color: \"#1665b2\" }}\n                    >\n                      {col.value}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </CardContent>\n        <CardContent>\n          {tableHeaders\n            .filter((e) => e.name.startsWith(\"comment_\"))\n            .map((col) => {\n              return (\n                <div key={\"cardcontent-\" + table.name + \"-\" + col.name}>\n                  <Typography variant=\"h6\" style={{ color: \"#1665b2\", fontWeight: \"bold\" }}>\n                    {col.displayName}\n                  </Typography>\n                  <TextHightlighter\n                    key={\"text-\" + table.id + \"-\" + col.name + \"-\" + table[col.name]}\n                    text={table[col.name]}\n                    highlight={searchText}\n                    updateText={props.updateColumns ? (text) => props.updateTables(table, col.name, text) : null}\n                    editable={col.editable && canEdit}\n                  />\n                </div>\n              );\n            })}\n        </CardContent>\n        {!expandedColumns && (\n          <CardActions disableSpacing>\n            <IconButton\n              className={clsx(classes.expand, {\n                [classes.expandOpen]: expanded,\n              })}\n              onClick={() => setExpanded(!expanded)}\n              aria-expanded={expanded}\n              aria-label=\"show more\"\n            >\n              <ExpandMoreIcon />\n            </IconButton>\n          </CardActions>\n        )}\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <AttributeTable\n              selectByTableId={props.selectByTableId}\n              tableId={table.id}\n              columns={visibleColumns}\n              attributeCols={attributeCols}\n              searchText={searchText}\n              updateText={props.updateColumns}\n              canEdit={props.canEdit}\n            />\n          </CardContent>\n        </Collapse>\n      </Card>\n    </Box>\n  );\n}\n\nconst StyledCardData = withStyles((theme) => ({\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n}))(CardData);\n\nclass DataGrid extends React.PureComponent {\n  render() {\n    const { tables, searchText, tableHeaders, attributeCols, visibleTables, displayHeader } = this.props;\n    if (!tables || tables.length === 0) {\n      return null;\n    }\n\n    return (\n      <div style={{ backgroundColor: \"#f4f8fe\" }}>\n        {tables.map((table) =>\n          visibleTables[table.id] ? (\n            <StyledCardData\n              selectByTableId={this.props.selectByTableId}\n              key={\"card-\" + table.id}\n              table={table}\n              tableHeaders={tableHeaders}\n              visibleColumns={visibleTables[table.id]}\n              attributeCols={attributeCols}\n              searchText={searchText}\n              updateColumns={this.props.updateColumns}\n              updateTables={this.props.updateTables}\n              expandedColumns={this.props.expandedColumns}\n              canEdit={this.props.canEdit}\n              displayHeader={displayHeader}\n            />\n          ) : null\n        )}\n      </div>\n    );\n  }\n}\n\nexport default DataGrid;\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport { TableDataInterface } from \"./Table\";\r\n\r\ninterface TextHightlighterInterface {\r\n  highlight: string;\r\n  style?: any;\r\n  text: string;\r\n  variant?: any;\r\n}\r\n\r\nclass TextHightlighter extends React.PureComponent<TextHightlighterInterface> {\r\n  render() {\r\n    const { highlight, text, variant, style } = this.props;\r\n\r\n    let displayText;\r\n    if (!highlight || highlight === \"\" || typeof text !== \"string\") {\r\n      displayText = text;\r\n    } else {\r\n      const parts = text.split(new RegExp(`(${highlight})`, \"gi\"));\r\n      displayText = parts\r\n        .map((part, i) => {\r\n          if (part.toLowerCase() === highlight.toLowerCase()) {\r\n            return `<span style=\"background-color: orange\">${part}</span>`;\r\n          }\r\n          return part;\r\n        })\r\n        .join(\"\");\r\n    }\r\n\r\n    return (\r\n      <Typography\r\n        variant={variant ? variant : \"body2\"}\r\n        style={style}\r\n        display=\"inline\"\r\n        dangerouslySetInnerHTML={{ __html: displayText }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\ninterface CardDataInterface {\r\n  searchText: string;\r\n  table: any;\r\n}\r\n\r\nfunction CardData(props: CardDataInterface) {\r\n  const { table, searchText } = props;\r\n\r\n  const data = [\r\n    { name: \"Clé primaire\", value: table.is_pk },\r\n    { name: \"Clé étrangère\", value: table.is_fk },\r\n    { name: \"Obligatoire\", value: table.is_mandatory },\r\n    { name: \"Description OHDSI\", value: table.comment_technique },\r\n    { name: \"Description EDS\", value: table.comment_fonctionnel },\r\n    { name: \"Nom table\", value: table.nomTable },\r\n  ];\r\n\r\n  return (\r\n    <Box p={1}>\r\n      <Card>\r\n        <CardContent>\r\n          {data.map((d, i) => (\r\n            <div key={i}>\r\n              <TextHightlighter\r\n                //key={\"text-\" + table.id + \"-\" + col.name + \"-\" + table[col.name]}\r\n                text={d.name}\r\n                variant={\"body1\"}\r\n                style={{ fontWeight: \"bold\", color: \"#1665b2\" }}\r\n                highlight={searchText}\r\n              />\r\n              {\" : \"}\r\n              <TextHightlighter\r\n                //key={\"text-\" + table.id + \"-\" + col.name + \"-\" + table[col.name]}\r\n                text={\r\n                  d.value === true ? \"OUI\" : d.value === false ? \"NON\" : d.value === null ? \"pas de donnée\" : d.value\r\n                }\r\n                variant={\"body1\"}\r\n                highlight={searchText}\r\n                style={{ color: \"#1665b2\" }}\r\n              />\r\n            </div>\r\n          ))}\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst StyledCardData = withStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}))(CardData);\r\n\r\ninterface VariableGridProps {\r\n  tables: Array<TableDataInterface>;\r\n  searchText: string;\r\n}\r\nexport default class VariableGrid extends React.PureComponent<VariableGridProps> {\r\n  render() {\r\n    return (\r\n      <div style={{ backgroundColor: \"#f4f8fe\" }}>\r\n        <StyledCardData table={this.props.tables[0]} searchText={this.props.searchText} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\n//import KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport BoxLine from \"../helpers/BoxLine.js\";\nimport DataGrid from \"./DataGrid.js\";\nimport VariableGrid from \"./VariableGrid\";\n\nconst drawerWidth = \"50%\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: drawerWidth,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    color: \"#1665B2\",\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    backgroundColor: \"#d2e2f4\",\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-start\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: 0,\n  },\n}));\n\nexport default function TableDrawer(props) {\n  const {\n    selectedTable,\n    onCloseTable,\n    type,\n    visibleTables,\n    tableHeaders,\n    selectByTableId,\n    //updateColumns,\n    attributeCols,\n    searchText,\n    /*canEdit,\n       updateTables, */\n  } = props;\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"persistent\"\n      anchor={/* type === \"tables\" ? */ \"right\" /* : \"bottom\" */}\n      open={!isEmpty(selectedTable)} /* && Object.keys(visibleTables).length > 0 */\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      <div className={classes.drawerHeader}>\n        <IconButton onClick={() => onCloseTable()}>\n          {\n            /* type === \"tables\" ? ( */\n            theme.direction === \"rtl\" ? <ChevronLeftIcon /> : <ChevronRightIcon />\n            /* ) : (\n            <KeyboardArrowDownIcon />\n          ) */\n          }\n        </IconButton>\n        {!isEmpty(selectedTable) && <BoxLine items={[{ text: selectedTable.name, variant: \"h4\" }]} />}\n      </div>\n      <Divider />\n      <div style={{ overflow: \"auto\" }}>\n        {!isEmpty(selectedTable) && visibleTables && (type === \"tables\" || type === \"visualisation\") && (\n          <DataGrid\n            selectByTableId={selectByTableId}\n            tables={[selectedTable]}\n            visibleTables={visibleTables}\n            tableHeaders={tableHeaders}\n            attributeCols={attributeCols}\n            searchText={searchText}\n            // updateColumns={updateColumns}\n            // updateTables={updateTables}\n            expandedColumns={true}\n            //canEdit={canEdit}\n            displayHeader={false}\n          />\n        )}\n        {!isEmpty(selectedTable) && visibleTables && type === \"variables\" && (\n          <VariableGrid tables={[selectedTable]} searchText={searchText} />\n        )}\n      </div>\n    </Drawer>\n  );\n}\n","import React from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      // marginLeft: theme.spacing(3),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n    width: \"100%\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\n\nfunction SearchInput({ updateSearchText, searchText }) {\n  const classes = useStyles();\n  return (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        <SearchIcon />\n      </div>\n      <InputBase\n        placeholder=\"Rechercher…\"\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput,\n        }}\n        value={searchText}\n        inputProps={{ \"aria-label\": \"search\" }}\n        onChange={(e) => updateSearchText(e.target.value)}\n      />\n    </div>\n  );\n}\n\nexport default SearchInput;\n","import * as React from \"react\";\nimport styled from \"@emotion/styled\";\n\nexport interface WorkspaceWidgetProps {\n  buttons?: any;\n}\n\nconst Toolbar = styled.div`\n  padding: 5px;\n  display: flex;\n  flex-shrink: 0;\n`;\n\nconst Content = styled.div`\n  flex-grow: 1;\n  height: 100%;\n`;\n\nconst Container = styled.div`\n  background: #d2e2f4;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  border-radius: 5px;\n  overflow: hidden;\n  width: 95vw;\n  margin-top: 30px;\n`;\n\nexport const StyledButton = styled.button`\n  background: #133c8a;\n  font-size: 14px;\n  padding: 5px 10px;\n  border: none;\n  color: white;\n  outline: none;\n  cursor: pointer;\n  margin: 2px;\n  border-radius: 3px;\n  &:hover {\n    background: #1162b0;\n  }\n`;\n\nexport class WorkspaceWidget extends React.PureComponent<WorkspaceWidgetProps> {\n  render() {\n    return (\n      <Container>\n        <Toolbar>{this.props.buttons}</Toolbar>\n        <Content>{this.props.children}</Content>\n      </Container>\n    );\n  }\n}\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nexport interface StyledCanvasWidgetProps {\n\tcolor?: string;\n\tbackground?: string;\n}\n\nconst Container = styled.div<{ color: string; background: string }>`\n  height: 70vh;\n  background-color: ${p => p.background};\n  background-size: 50px 50px;\n  display: flex;\n  > * {\n    height: 100%;\n    min-height: 100%;\n    width: 100%;\n  }\n  background-image: linear-gradient(\n      0deg,\n      transparent 24%,\n      ${p => p.color} 25%,\n      ${p => p.color} 26%,\n      transparent 27%,\n      transparent 54%,\n      ${p => p.color} 55%,\n      ${p => p.color} 56%,\n      transparent 57%,\n      transparent\n    ),\n    linear-gradient(\n      90deg,\n      transparent 24%,\n      ${p => p.color} 25%,\n      ${p => p.color} 26%,\n      transparent 27%,\n      transparent 54%,\n      ${p => p.color} 55%,\n      ${p => p.color} 56%,\n      transparent 57%,\n      transparent\n    );\n`;\n\nexport class StyledCanvasWidget extends React.Component<StyledCanvasWidgetProps> {\n\trender() {\n\t\treturn (\n\t\t\t<Container\n\t\t\t\tbackground={this.props.background || 'rgb(240, 240, 240)'}\n\t\t\t\tcolor={this.props.color || 'rgba(0,0,0, 0.05)'}>\n\t\t\t\t{this.props.children}\n\t\t\t</Container>\n\t\t);\n\t}\n}","import { Action, InputType } from '@projectstorm/react-canvas-core';\n\n const ZOOM_LEVELS = [1, 2, 3, 5, 8, 10, 25, 50, 75, 100, 150, 200, 300];\n\nexport default class ZoomAction extends Action {\n  constructor() {\n    super({\n      type: InputType.MOUSE_WHEEL,\n      fire: ({ event }) => {\n        if (event.preventDefault) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n\n        const model = this.engine.getModel();\n\n        // We can block layer rendering because we are only targeting the transforms\n        model.getLayers().forEach(layer => layer.allowRepaint(false));\n\n        const zoomDirection = Math.sign(event.deltaY) > 0 ? 'out' : 'in';\n\n        let previousZoomDiff = 1000;\n        let currentZoomLevelIndex = 0;\n        for (let i = 0; i < ZOOM_LEVELS.length; i++) {\n          const zoomLevel = ZOOM_LEVELS[i];\n          const currentZoomDiff = Math.abs(model.getZoomLevel() - zoomLevel);\n          if (currentZoomDiff < previousZoomDiff) {\n            currentZoomLevelIndex = i;\n            previousZoomDiff = currentZoomDiff;\n          }\n        }\n\n        let nextZoomLevelIndex;\n        if (zoomDirection === 'in') {\n          nextZoomLevelIndex = Math.min(\n            currentZoomLevelIndex + 1,\n            ZOOM_LEVELS.length - 1,\n          );\n        } else {\n          nextZoomLevelIndex = Math.max(currentZoomLevelIndex - 1, 0);\n        }\n\n        const oldZoomFactor = model.getZoomLevel() / 100;\n        model.setZoomLevel(ZOOM_LEVELS[nextZoomLevelIndex]);\n        const zoomFactor = model.getZoomLevel() / 100;\n\n        if (event.currentTarget) {\n          const boundingRect = event.currentTarget.getBoundingClientRect();\n          const clientWidth = boundingRect.width;\n          const clientHeight = boundingRect.height;\n\n          // Compute difference between rect before and after scroll\n          const widthDiff =\n            clientWidth * zoomFactor - clientWidth * oldZoomFactor;\n          const heightDiff =\n            clientHeight * zoomFactor - clientHeight * oldZoomFactor;\n\n          // Compute mouse coords relative to canvas\n          const clientX = event.clientX - boundingRect.left;\n          const clientY = event.clientY - boundingRect.top;\n\n          // Compute width and height increment factor\n          const xFactor =\n            (clientX - model.getOffsetX()) /\n            oldZoomFactor /\n            clientWidth;\n          const yFactor =\n            (clientY - model.getOffsetY()) /\n            oldZoomFactor /\n            clientHeight;\n\n          model.setOffset(\n            model.getOffsetX() - widthDiff * xFactor,\n            model.getOffsetY() - heightDiff * yFactor,\n          );\n        }\n\n        this.engine.repaintCanvas();\n\n        // Re-enable rendering\n        model.getLayers().forEach(layer => layer.allowRepaint(true));\n      },\n    });\n  }\n}","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function CircularIndeterminate(props) {\n  const { size } = props;\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" style={{ width: '100%' }}>\n      <Box m=\"auto\" p=\"50px\"><CircularProgress size={size}/></Box>\n      <Box m=\"auto\"><Typography component=\"div\" bgcolor=\"background.paper\">Loading...</Typography></Box>\n    </Box>\n  );\n}","import {\n  DefaultPortModel,\n  DefaultLinkFactory,\n  DefaultLinkModel,\n  DefaultLinkWidget,\n} from \"@projectstorm/react-diagrams\";\nimport { LinkWidget, PointModel } from \"@projectstorm/react-diagrams-core\";\nimport * as React from \"react\";\n\nexport class AdvancedLinkModel extends DefaultLinkModel {\n  bothDirection: boolean;\n  constructor() {\n    super({\n      type: \"advanced\",\n      width: 2,\n    });\n    this.bothDirection = false;\n  }\n\n  setBothDirection(dir: boolean): void {\n    this.bothDirection = dir;\n  }\n\n  getBothDirection(): boolean {\n    return this.bothDirection;\n  }\n}\n\nexport class AdvancedPortModel extends DefaultPortModel {\n  _isPk: boolean;\n  _isFk: boolean;\n\n  constructor(isIn: boolean, name?: string, label?: string) {\n    super(isIn, name, label);\n    this._isPk = false;\n    this._isFk = false;\n  }\n  createLinkModel(): any /* AdvancedLinkModel */ {\n    return new AdvancedLinkModel();\n  }\n\n  isPk(): boolean {\n    return this._isPk;\n  }\n\n  setPk(b: boolean) {\n    this._isPk = b;\n  }\n\n  isFk(): boolean {\n    return this._isFk;\n  }\n\n  setFk(b: boolean) {\n    this._isFk = b;\n  }\n}\n\nconst CustomLinkArrowWidget = (props: any) => {\n  const { point, previousPoint } = props;\n\n  const angle =\n    90 +\n    (Math.atan2(\n      point.getPosition().y - previousPoint.getPosition().y,\n      point.getPosition().x - previousPoint.getPosition().x\n    ) *\n      180) /\n      Math.PI;\n\n  //translate(50, -10),\n  return (\n    <g className=\"arrow\" transform={\"translate(\" + point.getPosition().x + \", \" + point.getPosition().y + \")\"}>\n      <g style={{ transform: \"rotate(\" + angle + \"deg)\" }}>\n        <g transform={\"translate(0, -3)\"}>\n          <polygon\n            points=\"0,10 8,30 -8,30\"\n            fill={props.color}\n            // onMouseLeave={() => {\n            // \tthis.setState({ selected: false });\n            // }}\n            // onMouseEnter={() => {\n            // \tthis.setState({ selected: true });\n            // }}\n            data-id={point.getID()}\n            data-linkid={point.getLink().getID()}\n          ></polygon>\n        </g>\n      </g>\n    </g>\n  );\n};\n\nexport class AdvancedLinkWidget extends DefaultLinkWidget {\n  generateArrow(point: PointModel, previousPoint: PointModel): JSX.Element {\n    return (\n      <CustomLinkArrowWidget\n        key={point.getID()}\n        point={point as any}\n        previousPoint={previousPoint as any}\n        colorSelected={this.props.link.getOptions().selectedColor}\n        color={this.props.link.getOptions().color}\n      />\n    );\n  }\n\n  render() {\n    //ensure id is present for all points on the path\n    var points = this.props.link.getPoints();\n    var paths = [];\n    this.refPaths = [];\n\n    //draw the multiple anchors and complex line instead\n    for (let j = 0; j < points.length - 1; j++) {\n      paths.push(\n        this.generateLink(\n          LinkWidget.generateLinePath(points[j], points[j + 1]),\n          {\n            \"data-linkid\": this.props.link.getID(),\n            \"data-point\": j,\n            onMouseDown: (event: any) => {\n              this.addPointToLink(event, j + 1);\n            },\n          },\n          j\n        )\n      );\n    }\n\n    //render the circles\n    if ((this.props.link as AdvancedLinkModel).getBothDirection()) {\n      paths.push(this.generateArrow(points[0], points[1]));\n      for (let i = 2; i < points.length - 1; i++) {\n        paths.push(this.generatePoint(points[i]));\n      }\n    } else {\n      for (let i = 1; i < points.length - 1; i++) {\n        paths.push(this.generatePoint(points[i]));\n      }\n    }\n\n    if (this.props.link.getTargetPort() !== null) {\n      paths.push(this.generateArrow(points[points.length - 1], points[points.length - 2]));\n    } else {\n      paths.push(this.generatePoint(points[points.length - 1]));\n    }\n\n    return <g data-default-link-test={this.props.link.getOptions().testName}>{paths}</g>;\n  }\n}\n\nexport class AdvancedLinkFactory extends DefaultLinkFactory {\n  constructor() {\n    super(\"advanced\");\n  }\n\n  generateModel(): AdvancedLinkModel {\n    return new AdvancedLinkModel();\n  }\n\n  generateReactWidget(event: any): JSX.Element {\n    return <AdvancedLinkWidget link={event.model} diagramEngine={this.engine} />;\n  }\n}\n","import {\n  DefaultNodeWidget,\n  DefaultNodeModel,\n  PortWidget,\n  DefaultNodeFactory,\n  //DefaultPortLabelProps,\n} from \"@projectstorm/react-diagrams\";\nimport { AdvancedPortModel } from \"./ArrowLink\";\nimport * as React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { PrimaryKey, ForeignKey } from \"../helpers/Keys\";\n\nexport class CustomNodeFactory extends DefaultNodeFactory {\n  generateReactWidget(event: any) {\n    return <CustomNodeWidget engine={this.engine as any} node={event.model} />;\n  }\n\n  generateModel(event: any) {\n    return new DefaultNodeModel();\n  }\n}\n\nconst PortLabel = styled.div`\n  display: flex;\n  margin-top: 1px;\n  align-items: center;\n`;\n\nconst Label = styled.div`\n  padding: 0 5px;\n  flex-grow: 1;\n`;\n\nconst Port = styled.div`\n  width: 15px;\n  height: 15px;\n  background: rgba(white, 0.1);\n`;\n\nclass KeyPortLabel extends React.Component<any /* DefaultPortLabelProps */> {\n  render() {\n    let keyLabel = <Port />;\n    if ((this.props.port as AdvancedPortModel).isPk()) {\n      keyLabel = (\n        <Port>\n          <PrimaryKey width=\"16\" />\n        </Port>\n      );\n    } else if ((this.props.port as AdvancedPortModel).isFk()) {\n      keyLabel = (\n        <Port>\n          <ForeignKey width=\"16\" />\n        </Port>\n      );\n    }\n\n    const port = (\n      <PortWidget engine={this.props.engine} port={this.props.port}>\n        {keyLabel}\n      </PortWidget>\n    );\n    const label = <Label>{this.props.port.getOptions().label}</Label>;\n\n    return (\n      <PortLabel>\n        {this.props.port.getOptions().in ? port : label}\n        {this.props.port.getOptions().in ? label : port}\n      </PortLabel>\n    );\n  }\n}\n\nexport const Node = styled.div<{ background: string; selected: boolean }>`\n  background-color: ${(p) => p.background};\n  border-radius: 5px;\n  font-family: sans-serif;\n  color: black;\n  border: solid 2px black;\n  overflow: visible;\n  font-size: 14px;\n  border: solid ${(p) => (p.selected ? \"4px black\" : \"2px black\")};\n`;\n\nexport const Title = styled.div`\n  background: #d2e2f4;\n  font-size: 14px;\n  font-weight: bold;\n  display: flex;\n  white-space: nowrap;\n  justify-items: center;\n`;\n\nexport const TitleName = styled.div`\n  flex-grow: 1;\n  padding: 5px 5px;\n`;\n\nexport const Ports = styled.div`\n  display: flex;\n  // background-image: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.2));\n  // background-color: #fefefe;\n`;\n\nexport const PortsContainer = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n\n  &:first-of-type {\n    margin-right: 10px;\n  }\n\n  &:only-child {\n    margin-right: 0px;\n  }\n`;\n\nexport class CustomNodeWidget extends DefaultNodeWidget {\n  generatePort = (port: any) => {\n    return <KeyPortLabel engine={this.props.engine} port={port} key={port.getID()} />;\n  };\n\n  render() {\n    return (\n      <Node\n        data-default-node-name={this.props.node.getOptions().name}\n        selected={this.props.node.isSelected()}\n        background={this.props.node.getOptions().color as string}\n      >\n        <Title>\n          <TitleName>{this.props.node.getOptions().name}</TitleName>\n        </Title>\n        <Ports>\n          <PortsContainer>{this.props.node.getInPorts().map(this.generatePort)}</PortsContainer>\n          <PortsContainer>{this.props.node.getOutPorts().map(this.generatePort)}</PortsContainer>\n        </Ports>\n      </Node>\n    );\n  }\n}\n","import createEngine, {\n  DiagramModel,\n  DefaultNodeModel,\n  DagreEngine,\n  PathFindingLinkFactory,\n} from \"@projectstorm/react-diagrams\";\nimport * as React from \"react\";\nimport { StyledButton, WorkspaceWidget } from \"./WorkspaceWidget\";\nimport { CanvasWidget } from \"@projectstorm/react-canvas-core\";\nimport { StyledCanvasWidget } from \"./StyledCanvasWidget\";\nimport ZoomAction from \"./ZoomActions.js\";\nimport CircularIndeterminate from \"../helpers/CircularIndeterminate.js\";\nimport { AdvancedLinkFactory, AdvancedPortModel } from \"./ArrowLink\";\nimport { CustomNodeFactory } from \"./CustomNode\";\n\nconst defaultNodeColor = \"#f4f8fe\";\nfunction createNode(name) {\n  return new DefaultNodeModel(name, defaultNodeColor);\n}\n\nconst engineMarginX = 25;\nconst engineMarginY = 25;\n\nclass EngineWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.engine = new DagreEngine({\n      graph: {\n        rankdir: \"BT\",\n        ranker: \"longest-path\",\n        marginx: engineMarginX,\n        marginy: engineMarginY,\n      },\n      includeLinks: false,\n    });\n  }\n\n  autoDistribute = () => {\n    this.engine.redistribute(this.props.engine.model);\n\n    this.reroute();\n    this.props.engine.repaintCanvas();\n  };\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.autoDistribute();\n      this.zoomToFit();\n    }, 500);\n  }\n\n  reroute = () => {\n    this.props.engine.getLinkFactories().getFactory(PathFindingLinkFactory.NAME).calculateRoutingMatrix();\n  };\n\n  zoomToFit = () => {\n    this.props.engine.zoomToFitNodes(50);\n  };\n\n  zoomIn = () => {\n    // Create a fake event to trigger zoom in\n    const evt = { type: \"wheel\", deltaY: -1 };\n    this.props.engine.getActionEventBus().fireAction({ event: evt });\n  };\n\n  zoomOut = () => {\n    // Create a fake event to trigger zoom out\n    const evt = { type: \"wheel\", deltaY: 1 };\n    this.props.engine.getActionEventBus().fireAction({ event: evt });\n  };\n  render() {\n    return (\n      <WorkspaceWidget\n        buttons={\n          <div>\n            <StyledButton onClick={this.autoDistribute}>Re-distribute</StyledButton>\n            <StyledButton onClick={this.zoomToFit}>Zoom to fit</StyledButton>\n            <StyledButton onClick={this.zoomIn}>Zoom in</StyledButton>\n            <StyledButton onClick={this.zoomOut}>Zoom out</StyledButton>\n          </div>\n        }\n      >\n        <StyledCanvasWidget background=\"#ffffff\" color=\"#f4f8fe\">\n          <CanvasWidget engine={this.props.engine} />\n        </StyledCanvasWidget>\n      </WorkspaceWidget>\n    );\n  }\n}\n\nclass Diagram extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      engine: null,\n      nodesIndex: null,\n      showColumns: false,\n      isLoading: true,\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      this.state.engine !== nextState.engine ||\n      Object.keys(this.props.visibleTables).length !== Object.keys(nextProps.visibleTables).length\n    );\n  }\n\n  componentDidMount() {\n    let model = new DiagramModel();\n\n    const nodesIndex = {};\n    const ports = {};\n\n    for (const table of this.props.tables) {\n      const node = createNode(table.name + ` [${table.id}]`);\n      node.id = table.id;\n      table._node = node;\n      node.registerListener({\n        selectionChanged: this.props.onSelected,\n      });\n      node.options.color = defaultNodeColor;\n\n      nodesIndex[table.id] = node;\n\n      for (const col of table.columns) {\n        const portName = table.name + \".\" + col.name;\n        const inside = col.parents.length === 0;\n        const port = new AdvancedPortModel(inside, portName, col.name);\n        port.setPk(col.is_pk);\n        port.setFk(col.is_fk);\n        port.setLocked(true);\n        node.addPort(port);\n        ports[portName] = port;\n      }\n      model.addNode(node);\n    }\n\n    // Add ports + connect nodes\n    for (const table of this.props.tables) {\n      for (const src of table.children) {\n        const srcPort = ports[src.table_source + \".\" + src.column_source];\n        const targetPort = ports[src.table_target + \".\" + src.column_target];\n        const link = srcPort.link(targetPort);\n        model.addLink(link);\n      }\n    }\n\n    // model.setLocked(true);\n    let engine = createEngine({\n      registerDefaultDeleteItemsAction: false,\n      registerDefaultZoomCanvasAction: false,\n    });\n    engine.getLinkFactories().registerFactory(new AdvancedLinkFactory());\n    engine.getNodeFactories().registerFactory(new CustomNodeFactory());\n    // Prevent modifying links by adding points\n    engine.setMaxNumberPointsPerLink(0);\n\n    engine.getActionEventBus().registerAction(new ZoomAction());\n\n    engine.setModel(model);\n    this.setState({ engine, nodesIndex, isLoading: false });\n  }\n\n  render() {\n    if (!this.state.engine || this.props.tables.length === 0) {\n      return null;\n    }\n\n    if (this.state.isLoading) {\n      return <CircularIndeterminate size=\"100px\" />;\n    }\n\n    return <EngineWidget engine={this.state.engine} showColumns={this.state.showColumns} />;\n  }\n}\n\nexport { Diagram, defaultNodeColor };\n","import React from \"react\";\r\nimport { isEmpty, orderBy } from \"lodash\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport VirtualizedTable from \"./VirtualizedTable\";\r\nimport TableDrawer from \"./TableDrawer\";\r\nimport SearchInput from \"../helpers/SearchInput\";\r\nimport { Diagram, defaultNodeColor } from \"../diagram/Diagram.js\";\r\n\r\n//TEMP DATA\r\nimport omopData from \"../omopData.json\";\r\n\r\nconst invertDirection: any = {\r\n  ASC: \"DESC\",\r\n  DESC: \"ASC\",\r\n};\r\n\r\nfunction selectNode(node: any, selected: boolean) {\r\n  node.setSelected(selected);\r\n  let link: any;\r\n  for (const port of node.getInPorts()) {\r\n    for (link of Object.values(port.getLinks())) {\r\n      link.setSelected(selected);\r\n    }\r\n  }\r\n\r\n  for (const port of node.getOutPorts()) {\r\n    for (link of Object.values(port.getLinks())) {\r\n      link.setSelected(selected);\r\n    }\r\n  }\r\n}\r\n\r\ninterface TableProps {\r\n  columns?: Array<object>;\r\n  headerHeight?: number;\r\n  rowHeight?: number;\r\n  type: string;\r\n}\r\n\r\ninterface TableState {\r\n  columnToSort: string;\r\n  sortDirection: string;\r\n  selectedTable: TableDataInterface | null;\r\n  searchText: string | null;\r\n  //\r\n  tables?: Array<TableDataInterface>;\r\n  tableHeaders?: Array<TableHeaderInterface>;\r\n  attributeCols?: Array<AttributeColInterface>;\r\n  isLoading?: boolean;\r\n  error?: any;\r\n  columns?: Array<object>;\r\n  //\r\n  visibleSelectedTableObj?: object;\r\n  visibleTablesObj?: object;\r\n  visibleTables?: Array<TableDataInterface>;\r\n  visibleColumnsCount?: number;\r\n  visibleColumnsAll?: Array<ColumnDataInterface>;\r\n}\r\n\r\nexport interface TableDataInterface {\r\n  id: number;\r\n  name: string;\r\n  comment_fonctionnel: string | null;\r\n  comment_technique: string | null;\r\n  typ_table: string;\r\n  count_table: string;\r\n  last_analyze: string | null;\r\n  last_commit_timestampz: any | null;\r\n  columns: Array<ColumnDataInterface>;\r\n  columns_count: number;\r\n  parents: Array<any>;\r\n  children: Array<any>;\r\n  _node?: any;\r\n}\r\n\r\nexport interface ColumnDataInterface {\r\n  id: number;\r\n  name: string;\r\n  ids_table: number;\r\n  comment_fonctionnel?: string | null;\r\n  comment_technique?: string | null;\r\n  typ_column: string;\r\n  is_mandatory: boolean;\r\n  is_pk: boolean;\r\n  is_fk: boolean;\r\n  parents: Array<any>;\r\n  children: Array<any>;\r\n  nomTable?: string;\r\n  tableStandardOMOP?: string;\r\n}\r\n\r\ninterface TableHeaderInterface {\r\n  name: string;\r\n  editable: boolean;\r\n  display: boolean;\r\n  displayName: string;\r\n}\r\n\r\ninterface AttributeColInterface {\r\n  name: string;\r\n  editable: boolean;\r\n  display: boolean;\r\n  displayName: string;\r\n}\r\n\r\ninterface onRowClickInterface {\r\n  e: Event;\r\n  i: number;\r\n  rowData: any;\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    selectByTableId: any;\r\n  }\r\n}\r\n\r\nexport default class Table extends React.Component<TableProps, TableState> {\r\n  static defaultProps = {\r\n    headerHeight: 48,\r\n    rowHeight: 48,\r\n    columns: [],\r\n  };\r\n\r\n  state: TableState = {\r\n    columnToSort: this.props.type === \"tables\" ? \"name\" : \"nomTable\",\r\n    sortDirection: \"ASC\",\r\n    selectedTable: null /*  {} */,\r\n    searchText: \"\",\r\n  };\r\n\r\n  handleSort = (headerProps: { datakey: string; id: string; label: string; width: number }) => {\r\n    const { id } = headerProps;\r\n    this.setState((state) => ({\r\n      columnToSort: id,\r\n      sortDirection: state.columnToSort === id ? invertDirection[state.sortDirection] : \"ASC\",\r\n    }));\r\n  };\r\n\r\n  onRowClick = ({ e, i, rowData }: onRowClickInterface) => {\r\n    // ! -> non-null assertion operator, for typescript\r\n    this.setState({ selectedTable: rowData }, () => this.selectByTableId(this.state.selectedTable!.id));\r\n  };\r\n\r\n  onCloseTable = () => {\r\n    this.setState({ selectedTable: null /* {} */ });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Bind this function globally so that it can be called from svg\r\n    window.selectByTableId = this.selectByTableId;\r\n\r\n    let columns: Array<object> = [];\r\n    Object.keys(omopData.tables).forEach((t, i) => {\r\n      omopData.tables[i].columns.forEach((c: ColumnDataInterface, i: number) => {\r\n        c.nomTable = omopData.tables[i] ? omopData.tables[i].name : \"nom table undefined\";\r\n        c.tableStandardOMOP = c.comment_technique ? \"OUI\" : \"NON\";\r\n        columns.push(c);\r\n      });\r\n    });\r\n\r\n    this.setState(\r\n      {\r\n        tables: omopData.tables,\r\n        tableHeaders: omopData.tableHeaders,\r\n        attributeCols: omopData.attributeCols,\r\n        selectedTable: null,\r\n        searchText: \"\",\r\n        isLoading: false,\r\n        error: null,\r\n        columns: columns,\r\n      },\r\n      () => this.updateSearchText(\"\")\r\n    );\r\n\r\n    /* fetch(\"/tables?ids_schema=\" + this.props.selectedSchema.id)\r\n    .then(res => res.json())\r\n    .then(\r\n      (results) => {\r\n        this.setState({\r\n          tables: results.tables,\r\n          tableHeaders: results.tableHeaders,\r\n          attributeCols: results.attributeCols,\r\n          selectedTable: null,\r\n          searchText: '',\r\n          isLoading: false,\r\n          error: null\r\n        }, () => this.updateSearchText(''));\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          error,\r\n          searchText: '',\r\n          isLoading: false,\r\n          selectedTable: null,\r\n        });\r\n      }\r\n    ); */\r\n  }\r\n\r\n  updateSearchText = (searchText: string) => {\r\n    const visibleSelectedTableObj: { [key: number]: any } = {};\r\n    if (!isEmpty(this.state.selectedTable) && this.props.type === \"tables\") {\r\n      const { visibleColumns } = this.applySearchFilter(\r\n        this.state.selectedTable,\r\n        this.state.tableHeaders!,\r\n        this.state.attributeCols!,\r\n        null\r\n      );\r\n      visibleSelectedTableObj[this.state.selectedTable!.id!] = visibleColumns;\r\n    }\r\n\r\n    const visibleAttributeCols = this.state.attributeCols!.filter((e) => e.display);\r\n    const visibleTablesObj: { [key: number]: any } = {};\r\n    let visibleColumnsCount = 0;\r\n    let visibleColumnsAll: Array<ColumnDataInterface> = [];\r\n\r\n    for (const table of this.state.tables!) {\r\n      const { visibleColumns, tableHeadersHasText } = this.applySearchFilter(\r\n        table,\r\n        this.state.tableHeaders!,\r\n        visibleAttributeCols,\r\n        searchText\r\n      );\r\n      //Set visibleColumnsAll for \"Variables\" table\r\n      visibleColumns.forEach((c) => {\r\n        visibleColumnsAll.push(c);\r\n      });\r\n\r\n      if (tableHeadersHasText || visibleColumns.length > 0) {\r\n        visibleTablesObj[table.id!] = visibleColumns;\r\n        visibleColumnsCount += visibleColumns.length;\r\n\r\n        // For diagram\r\n        if (table._node) {\r\n          table._node.options.color = defaultNodeColor;\r\n        }\r\n      } else if (table._node) {\r\n        table._node.options.color = \"#cccccc\";\r\n      }\r\n    }\r\n    //SET visibleTables from visibleTablesObj\r\n    let visibleTables: Array<TableDataInterface> = [];\r\n    this.state.tables!.forEach((t, i) => {\r\n      if (Object.keys(visibleTablesObj).includes(t.id!.toString())) {\r\n        visibleTables.push(t);\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      searchText,\r\n      visibleSelectedTableObj,\r\n      visibleTablesObj,\r\n      visibleTables,\r\n      visibleColumnsCount,\r\n      visibleColumnsAll,\r\n    });\r\n  };\r\n\r\n  hasSearchText(\r\n    col: ColumnDataInterface | TableDataInterface | any,\r\n    attributeCols: Array<AttributeColInterface>,\r\n    filter: string | null\r\n  ) {\r\n    if (!filter || filter.length === 0) {\r\n      return true;\r\n    }\r\n\r\n    const filterLower = filter.toLowerCase();\r\n\r\n    for (const colName of attributeCols) {\r\n      if (typeof col[colName.name] === \"string\" && col[colName.name].search(filterLower) >= 0) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  applySearchFilter(\r\n    table: TableDataInterface | null /*  | { id?: number | undefined } */,\r\n    tableHeaders: Array<TableHeaderInterface>,\r\n    attributeCols: Array<AttributeColInterface>,\r\n    filter: string | null\r\n  ) {\r\n    const visibleColumns = [];\r\n\r\n    for (let j = 0; j < table!.columns.length; j++) {\r\n      const col = table!.columns[j];\r\n      if (this.hasSearchText(col, attributeCols, filter)) {\r\n        visibleColumns.push(col);\r\n      }\r\n    }\r\n\r\n    const tableHeadersHasText = this.hasSearchText(table, tableHeaders, filter);\r\n\r\n    return { visibleColumns, tableHeadersHasText };\r\n  }\r\n\r\n  onSelectedDiagramTable = (e: { isSelected: boolean; entity: { id: number } }) => {\r\n    if (!e.isSelected) {\r\n      return;\r\n    }\r\n    this.selectByTableId(e.entity.id);\r\n  };\r\n\r\n  selectByTableId = (tableId: number) => {\r\n    if (!tableId) {\r\n      this.setState({\r\n        selectedTable: null,\r\n        visibleSelectedTableObj: {},\r\n      });\r\n    }\r\n\r\n    //tables\r\n    let table = this.state.tables!.find((e) => e.id === tableId);\r\n\r\n    let visibleSelectedTableObj: any = {};\r\n\r\n    if (this.props.type === \"tables\" || this.props.type === \"visualisation\") {\r\n      if (!table) {\r\n        return;\r\n      }\r\n\r\n      visibleSelectedTableObj[table.id] = table.columns;\r\n\r\n      if (table._node) {\r\n        selectNode(table._node, true);\r\n      }\r\n\r\n      if (this.state.selectedTable && this.state.selectedTable._node) {\r\n        selectNode(this.state.selectedTable._node, false);\r\n      }\r\n    } else {\r\n      //so if variables\r\n      table = this.state.selectedTable!;\r\n      visibleSelectedTableObj[table.id] = this.state.selectedTable;\r\n    }\r\n\r\n    this.setState({ selectedTable: table!, visibleSelectedTableObj });\r\n  };\r\n\r\n  render() {\r\n    const { columns, headerHeight, rowHeight, type } = this.props;\r\n    const { visibleTables, visibleColumnsAll } = this.state;\r\n\r\n    const dir = this.state.sortDirection === \"ASC\" ? \"asc\" : \"desc\";\r\n\r\n    const rows = orderBy(\r\n      type === \"tables\" ? visibleTables : visibleColumnsAll,\r\n      this.state.columnToSort,\r\n      dir\r\n      //this.state.sortDirection.toLowerCase()\r\n    );\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <SearchInput updateSearchText={this.updateSearchText} searchText={this.state.searchText} />\r\n        {this.props.type === \"visualisation\" && this.state.visibleTables && this.state.tables ? (\r\n          <Diagram\r\n            tables={this.state.tables}\r\n            visibleTables={this.state.visibleTablesObj}\r\n            selectedTable={this.state.selectedTable}\r\n            onSelected={this.onSelectedDiagramTable}\r\n          />\r\n        ) : (\r\n          <React.Fragment>\r\n            <Paper style={{ height: \"80%\", width: \"100%\" }}>\r\n              {rows && (\r\n                <VirtualizedTable\r\n                  rowCount={rows.length}\r\n                  rowGetter={({ index }: any) => rows[index]}\r\n                  columns={columns}\r\n                  handleSort={this.handleSort}\r\n                  columnToSort={this.state.columnToSort}\r\n                  sortDirection={this.state.sortDirection}\r\n                  onRowClick={this.onRowClick}\r\n                  headerHeight={headerHeight}\r\n                  rowHeight={rowHeight}\r\n                  searchText={this.state.searchText}\r\n                />\r\n              )}\r\n            </Paper>\r\n          </React.Fragment>\r\n        )}\r\n        <TableDrawer\r\n          selectedTable={this.state.selectedTable}\r\n          onCloseTable={this.onCloseTable}\r\n          rows={visibleTables}\r\n          type={type}\r\n          visibleTables={this.state.visibleSelectedTableObj}\r\n          selectByTableId={this.selectByTableId}\r\n          searchText={this.state.searchText}\r\n          /* updateColumns={this.updateColumns}\r\n        updateTables={this.updateTables}\r\n        canEdit={this.state.authToken !== ''} */\r\n          tableHeaders={this.state.tableHeaders}\r\n          attributeCols={this.state.attributeCols}\r\n          expandedColumns={true}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport Table from \"./Table\";\r\nimport { PageInterface } from \"../App\";\r\n\r\nconst columns = [\r\n  { width: 300, label: \"Table\", dataKey: \"name\", id: \"name\" },\r\n  {\r\n    width: 1300,\r\n    label: \"Description OHDSI\",\r\n    dataKey: \"comment_technique\",\r\n    id: \"comment_technique\",\r\n  },\r\n];\r\n\r\nexport default function Tables(props: PageInterface) {\r\n  useEffect(() => {\r\n    props.updateHash(props.path);\r\n  });\r\n  return (\r\n    <div className=\"tables\">\r\n      <h2>Les tables de l'EDS</h2>\r\n      <Table columns={columns} headerHeight={48} rowHeight={48} type={\"tables\"} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Table from \"./Table\";\r\nimport { PageInterface } from \"../App\";\r\n\r\nconst columns = [\r\n  { width: 200, label: \"Nom variable\", dataKey: \"name\", id: \"name\" },\r\n  { width: 200, label: \"Nom table\", dataKey: \"nomTable\", id: \"nomTable\" },\r\n  { width: 150, label: \"Type\", dataKey: \"typ_column\", id: \"typ_column\" },\r\n  { width: 150, label: \"Table standard OMOP\", dataKey: \"tableStandardOMOP\", id: \"tableStandardOMOP\" },\r\n  { width: 350, label: \"Description OHDSI\", dataKey: \"comment_technique\", id: \"comment_technique\" },\r\n  { width: 550, label: \"Description EDS\", dataKey: \"comment_fonctionnel\", id: \"comment_fonctionnel\" },\r\n];\r\n\r\nexport default class Variables extends React.Component<PageInterface> {\r\n  /* test = () => {\r\n    fetch(\"/databases\")\r\n      .then(res => res.json())\r\n      .then((results) => {console.log(results)})\r\n  } */\r\n  componentDidMount = () => {\r\n    this.props.updateHash(this.props.path);\r\n    /*   let headers = new Headers();\r\n    headers.append(\"Authorization\", \"Basic \" + btoa(\"aphp:dataiku\"));\r\n    fetch(\"https://datadef-covid19.yuen.fr/tables?ids_schema=1344\", {\r\n      method: \"GET\",\r\n      headers: headers,\r\n      mode: \"no-cors\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((results) => {\r\n        console.log(results);\r\n      }); */\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"tables\">\r\n        <h2>Les variables de l'EDS</h2>\r\n        <Table columns={columns} headerHeight={48} rowHeight={48} type={\"variables\"} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport Table from \"./Table\";\r\nimport { PageInterface } from \"../App\";\r\n\r\nexport default function Visualisation(props: PageInterface) {\r\n  useEffect(() => {\r\n    props.updateHash(props.path);\r\n  });\r\n  return <Table type=\"visualisation\" />;\r\n}\r\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Accueil from \"./components/Accueil\";\nimport Tables from \"./components/Tables\";\nimport Variables from \"./components/Variables\";\nimport Visualisation from \"./components/Visualisation\";\nimport { Button } from \"@material-ui/core\";\nimport \"./App.scss\";\n\nexport interface PageInterface {\n  updateHash: any;\n  path: string;\n}\n\nclass App extends React.Component {\n  state = {\n    hash: window.location.hash,\n  };\n\n  updateHash = (pathToUpdate: string) => {\n    if (pathToUpdate !== this.state.hash) {\n      this.setState({ hash: window.location.hash });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          <h1>Explorateur des données de l'EDS</h1>\n          <div className=\"menu\">\n            <div className=\"nav\">\n              <Button\n                variant=\"outlined\"\n                href=\"/#/\"\n                style={{ backgroundColor: window.location.hash === \"#/\" ? \"#1162b0\" : \"#133c8a\" }}\n              >\n                Accueil\n              </Button>\n              <Button\n                variant=\"outlined\"\n                href=\"/#/tables\"\n                style={{ backgroundColor: window.location.hash === \"#/tables\" ? \"#1162b0\" : \"#133c8a\" }}\n              >\n                Tables\n              </Button>\n              <Button\n                variant=\"outlined\"\n                href=\"/#/variables\"\n                style={{ backgroundColor: window.location.hash === \"#/variables\" ? \"#1162b0\" : \"#133c8a\" }}\n              >\n                Variables\n              </Button>\n              <Button\n                variant=\"outlined\"\n                href=\"/#/visualisation\"\n                style={{ backgroundColor: window.location.hash === \"#/visualisation\" ? \"#1162b0\" : \"#133c8a\" }}\n              >\n                Visualisation de la base de l'EDS\n              </Button>\n            </div>\n            {/*lien correct à ajouter */}\n            <Button\n              variant=\"outlined\"\n              href=\"https://www.ecosia.org/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              style={{ backgroundColor: \"#133c8a\" }}\n            >\n              Éditer la documentation\n            </Button>\n          </div>\n        </div>\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Accueil updateHash={this.updateHash} path=\"#/\" />\n          </Route>\n          <Route path=\"/tables\">\n            <Tables updateHash={this.updateHash} path=\"#/tables\" />\n          </Route>\n          <Route path=\"/variables\">\n            <Variables updateHash={this.updateHash} path=\"#/variables\" />\n          </Route>\n          <Route path=\"/visualisation\">\n            <Visualisation updateHash={this.updateHash} path=\"#/visualisation\" />\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <React.StrictMode>\n      <App location={window.location.hash} />\n    </React.StrictMode>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}